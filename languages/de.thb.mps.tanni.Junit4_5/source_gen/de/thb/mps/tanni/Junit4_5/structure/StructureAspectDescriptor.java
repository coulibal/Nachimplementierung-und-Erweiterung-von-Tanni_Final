package de.thb.mps.tanni.Junit4_5.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptEqualAssert = createDescriptorForEqualAssert();
  /*package*/ final ConceptDescriptor myConceptTest = createDescriptorForTest();
  /*package*/ final ConceptDescriptor myConceptTestCase = createDescriptorForTestCase();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.aggregatedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptEqualAssert, myConceptTest, myConceptTestCase);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.EqualAssert:
        return myConceptEqualAssert;
      case LanguageConceptSwitch.Test:
        return myConceptTest;
      case LanguageConceptSwitch.TestCase:
        return myConceptTestCase;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForEqualAssert() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("de.thb.mps.tanni.Junit4_5", "EqualAssert", 0x95866216e5aa493fL, 0xbb273c6c8066e765L, 0xa9e170e92b23b5fL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1edfe4d4-8097-4f72-bfb0-a1cee56111c4(de.thb.mps.tanni.Junit4_5.structure)/765074338057698143");
    b.version(2);
    b.associate("testedMethod", 0xa9e170e92b23fd9L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6b6a1e379f9408L).optional(true).origin("765074338057699289").done();
    b.aggregate("parameters", 0xa9e170e92b23fd4L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(true).origin("765074338057699284").done();
    b.aggregate("expectedResult", 0xa9e170e92b23fd6L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("765074338057699286").done();
    b.alias("Equals-check");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("de.thb.mps.tanni.Junit4_5", "Test", 0x95866216e5aa493fL, 0xbb273c6c8066e765L, 0xa9e170e92b24488L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1edfe4d4-8097-4f72-bfb0-a1cee56111c4(de.thb.mps.tanni.Junit4_5.structure)/765074338057700488");
    b.version(2);
    b.property("description", 0xa9e170e92b2448bL).type(PrimitiveTypeId.STRING).origin("765074338057700491").done();
    b.aggregate("equalsCheck", 0xa9e170e92b2448dL).target(0x95866216e5aa493fL, 0xbb273c6c8066e765L, 0xa9e170e92b23b5fL).optional(true).ordered(true).multiple(false).origin("765074338057700493").done();
    b.alias("Test class");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestCase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("de.thb.mps.tanni.Junit4_5", "TestCase", 0x95866216e5aa493fL, 0xbb273c6c8066e765L, 0xa9e170e92b27b79L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1edfe4d4-8097-4f72-bfb0-a1cee56111c4(de.thb.mps.tanni.Junit4_5.structure)/765074338057714553");
    b.version(2);
    b.aggregate("test", 0xa9e170e92b27b7cL).target(0x95866216e5aa493fL, 0xbb273c6c8066e765L, 0xa9e170e92b24488L).optional(true).ordered(true).multiple(true).origin("765074338057714556").done();
    return b.create();
  }
}
